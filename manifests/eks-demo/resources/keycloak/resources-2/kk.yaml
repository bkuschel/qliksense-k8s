apiVersion: v1
data:
  adminEmailAddress: admin@qseok.tk
  idpFQDN: keycloak.devqseok.tk
  imageRegistry: qlik-docker-qsefe.bintray.io
  ingressAuthUrl: http://qliksense-edge-auth.$(NAMESPACE).svc.cluster.local:8080/v1/auth
  ingressClass: qlik-nginx
  qlikSenseFQDN: qliksense.devqseok.tk
  realmName: QSEoK
  storageClassName: ""
kind: ConfigMap
metadata:
  labels:
    app: keycloak
    release: qliksense
  name: qliksense-keycloak-configs-t8gc2b48b7
  namespace: default
---
apiVersion: v1
data:
  realm.json: 
kind: Secret
metadata:
  labels:
    app: keycloak
    release: qliksense
  name: qliksense-keycloak-realm-7h99gmb929
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  clientSecret: eHh4eHg=
  defaultUserPassword: eHh4eHg=
  password: eHh4eHg=
  postgresqlPassword: eHh4eHg=
  something: ZWxzZQ==
kind: Secret
metadata:
  labels:
    app: keycloak
    release: qliksense
  name: qliksense-keycloak-secrets-m9d9996259
  namespace: default
type: Opaque
