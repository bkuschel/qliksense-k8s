apiVersion: v1
data:
  common: test
  imageRegistry: qliktech-docker.jfrog.io
  ingressAuthUrl: http://qliksense-edge-auth.default.svc.cluster.local:8080/v1/auth
  ingressClass: qlik-nginx
kind: ConfigMap
metadata:
  labels:
    app: data-rest-source
    release: qliksense
  name: qliksense-data-rest-source-configs-h6965bdhhd
  namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: data-rest-source
    release: qliksense
  name: qliksense-data-rest-source-secrets-cg6b49c66d
  namespace: default
stringData:
  mongoDbUri: null
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app: data-rest-source
    chart: data-rest-source-1.1.4
    heritage: Tiller
    release: qliksense
  name: qliksense-data-rest-source
  namespace: default
spec:
  ports:
  - name: data-rest-source
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: data-rest-source
    release: data-rest-source
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: data-rest-source
    chart: data-rest-source-1.1.4
    heritage: Tiller
    release: qliksense
  name: qliksense-data-rest-source
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-rest-source
      release: data-rest-source
  template:
    metadata:
      labels:
        app: data-rest-source
        release: data-rest-source
    spec:
      containers:
      - env:
        - name: HOST_PORT
          value: "8080"
        image: qlik-docker-qsefe.bintray.io/data-rest-source:1.0.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
        name: main
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
      imagePullSecrets:
      - name: artifactory-docker-secret
