apiVersion: apps/v1
kind: Deployment
metadata:
  name: chronos-worker
spec:
  template:
    metadata:
      labels:
        chronos-worker-nats-client: null
    spec:
      containers:
      - name: main
        args:
        - -natsURI=$(NATS_URI)
        - -stanClusterID=$(NATS_STREAMING_CLUSTER_ID)
        - -jwtTokenAuthEnabled=true
        - -jwtTokenAuthURL=$(TOKEN_AUTH_URI)/v1/internal-tokens
        - -headerManagerEnabled=true
        - -jwtKid=$(TOKEN_AUTH_PRIVATE_KEY_ID)
        env:
        - $patch: delete
          name: REDIS_URI
        - $patch: delete
          name: REDIS_PWD
        - name: REDIS_URI_WITH_PORT
          valueFrom:
            configMapKeyRef:
              key: redisUriWithPort
              name: chronos-worker-configs
        - name: REDIS_URI
          value: $(REDIS_URI_WITH_PORT)
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redisPassword
              name: chronos-worker-secrets
        - name: TOKEN_AUTH_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              key: tokenAuthPrivateKey
              name: chronos-worker-secrets
        - name: TOKEN_AUTH_PRIVATE_KEY_ID
          valueFrom:
            secretKeyRef:
              key: tokenAuthPrivateKeyId
              name: chronos-worker-secrets
        - name: JWT_PRIVATE_KEY
          value: $(TOKEN_AUTH_PRIVATE_KEY)
        - name: REDIS_PWD
          value: $(REDIS_PASSWORD)
        - name: TOKEN_AUTH_URI
          valueFrom:
            configMapKeyRef:
              key: tokenAuthUri
              name: chronos-worker-configs
        - name: NATS_STREAMING_CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: natsStreamingClusterId
              name: chronos-worker-configs
        - name: NATS_URI
          valueFrom:
            configMapKeyRef:
              key: natsUri
              name: chronos-worker-configs
